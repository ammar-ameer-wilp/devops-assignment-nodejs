pipeline {
    agent { label 'nodejs' } 

    environment {
        NVM_DIR = "/home/ammar/.nvm"
        NODE_VERSION = "v18.16.1"
    }

    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/ammar-ameer-wilp/devops-assignment-nodejs.git', branch: 'main'
            }
        }

        stage('Install') {
            steps {
                sh '''
                    export NVM_DIR="$HOME/.nvm"
                    [ -s "$NVM_DIR/nvm.sh" ] && \\. "$NVM_DIR/nvm.sh"
                    nvm use $NODE_VERSION
                    node -v
                    npm -v
                    npm install
                '''
            }
        }

        stage('Test') {
            steps {
                script {
                    try {
                        sh '''
                            export NVM_DIR="$HOME/.nvm"
                            [ -s "$NVM_DIR/nvm.sh" ] && \\. "$NVM_DIR/nvm.sh"
                            nvm use $NODE_VERSION
                            node -v
                            npm -v
                            npm install --include=dev
                            npx jest
                        '''
                    } catch (e) {
                        echo "Tests failed: ${e}"
                        currentBuild.result = 'FAILURE'
                        throw e
                    }
                }
            }
        }

        stage('Build') {
            steps {
                script {
                    try {
                        sh '''
                            export NVM_DIR="$HOME/.nvm"
                            [ -s "$NVM_DIR/nvm.sh" ] && \\. "$NVM_DIR/nvm.sh"
                            nvm use $NODE_VERSION
                            node -v
                            npm -v
                            npm run build
                        '''
                    } catch (e) {
                        echo "Build failed: ${e}"
                        currentBuild.result = 'FAILURE'
                        throw e
                    }
                }
            }
        }

        stage('Deploy to Staging') {
            steps {
                sh '''
                    echo "Deploying to Staging..."
                    export NVM_DIR="$HOME/.nvm"
                    [ -s "$NVM_DIR/nvm.sh" ] && \\. "$NVM_DIR/nvm.sh"
                    nvm use $NODE_VERSION
        
                    pm2 delete staging || true
                    pm2 start src/index.js --name staging --env staging -- --port 3001
                    echo "Staging deployed at http://localhost:3001"
                '''
            }
        }

        stage('Deploy to Production') {
            steps {
                input message: "Approve Production Deployment?"  // Manual approval
                sh '''
                    echo "Deploying to Production..."
                    export NVM_DIR="$HOME/.nvm"
                    [ -s "$NVM_DIR/nvm.sh" ] && \\. "$NVM_DIR/nvm.sh"
                    nvm use $NODE_VERSION
        
                    pm2 delete production || true
                    pm2 start src/index.js --name production --env production -- --port 3000
                    echo "Production deployed at http://localhost:3000"
                '''
            }
        }
    }

    post {
        success {
            echo '✅ Pipeline completed successfully!'
        }
        failure {
            echo '❌ Pipeline failed. Check logs.'
        }
    }
}
